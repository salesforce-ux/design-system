// Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
// Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license

// ------------
// Init
// ------------
@import '../../../shared/common/init';

// ------------
// Private
// ------------

// Sizing Tokens
$_c-icon-x-large: rem(64px);
$_c-icon-large: rem(48px);
$_c-icon-medium: rem(32px);
$_c-icon-small: rem(24px);
$_c-icon-x-small: rem(16px);
$_c-icon-xx-small: rem(12px);

// Boundary Sizes
// We need to account for borders being apart of the box-model so we're subtracting
// the a border width of 2px (top/bottom or left/right) since the boundary size is typically
// used in combination with a boundary border like a button icon
//
// (30+1+1)x(30+1+1) = 32x32
$_c-icon-boundary-x-large: rem(62px);
$_c-icon-boundary-large: rem(46px);
$_c-icon-boundary-medium: rem(30px);
$_c-icon-boundary-small: rem(22px);
$_c-icon-boundary-x-small: rem(14px);
$_c-icon-boundary-xx-small: rem(10px);

// Colors
$_c-icon-background-color-default: #54698d;

// Border Radius
$_c-icon-border-radius-small: rem(2px);

// Spacing
$_c-icon-action-padding: rem(6px);
$_c-icon-action-padding-x-large: rem(10px);
$_c-icon-action-padding-large: rem(8px);
$_c-icon-action-padding-medium: rem(6px);
$_c-icon-action-padding-small: rem(5px);
$_c-icon-action-padding-x-small: rem(3px);
$_c-icon-action-padding-xx-small: rem(2px);

// ------------
// Mixins
// ------------
@import '../mixins/index';

:host {
  @include icon-base;
  // These aren't used by us but by platform.
  // LWC doesn't have access to getToken(name) method, only Aura does and was used to grab the paths to the icons.
  // LWC needs them as CSS props. ü§∑‚Äç
  --lwc-c-icon-action-sprite: '/_slds/icons/action-sprite/svg/symbols.svg';
  --lwc-c-icon-action-sprite-rtl: '/_slds/icons/action-sprite/svg/symbols_rtl.svg';
  --lwc-c-icon-custom-sprite: '/_slds/icons/custom-sprite/svg/symbols.svg';
  --lwc-c-icon-custom-sprite-rtl: '/_slds/icons/custom-sprite/svg/symbols_rtl.svg';
  --lwc-c-icon-doctype-sprite: '/_slds/icons/doctype-sprite/svg/symbols.svg';
  --lwc-c-icon-doctype-sprite-rtl: '/_slds/icons/doctype-sprite/svg/symbols_rtl.svg';
  --lwc-c-icon-standard-sprite: '/_slds/icons/standard-sprite/svg/symbols.svg';
  --lwc-c-icon-standard-sprite-rtl: '/_slds/icons/standard-sprite/svg/symbols_rtl.svg';
  --lwc-c-icon-utility-sprite: '/_slds/icons/utility-sprite/svg/symbols.svg';
  --lwc-c-icon-utility-sprite-rtl: '/_slds/icons/utility-sprite/svg/symbols_rtl.svg';
}

/**
 * @summary
 * @selector .lwc-icon
 * @restrict .lwc-icon-boundary span
 */
.lwc-icon {
  @include icon-base;
  @include square(var(--lwc-c-icon-size, $_c-icon-x-small));
  color: var(--lwc-c-icon-color, $color-gray-9);
  border-radius: var(--lwc-c-icon-radius, $border-radius-medium);
  vertical-align: middle;
}

/**
 * Icon type
 */
[class*='lwc-icon-action'],
[class*='lwc-icon-custom'],
[class*='lwc-icon-standard'],
[class*='lwc-icon-doctype'] {
  @include square(var(--lwc-c-icon-size, $_c-icon-small));
}

[class*='lwc-icon-action'],
[class*='lwc-icon-custom'],
[class*='lwc-icon-standard'] {
  background: $_c-icon-background-color-default;
  color: var(--lwc-c-icon-color, $color-gray-1);
}

[class*='lwc-icon-action'] {
  border-radius: $border-radius-circle;
  padding: $_c-icon-action-padding;
  vertical-align: bottom;
}

// Action and Custom
$icon-bg-map: map-merge($bg-actions-map, $bg-custom-map);

@each $name, $color in $icon-bg-map {

  .lwc-icon-#{$name} {
    background-color: $color;
  }
}

// Standard
@each $name, $color in $bg-standard-map {

  .lwc-icon-standard-#{$name} {
    background-color: $color;
  }
}

/**
 * @summary Unsets background and color from standard, custom, and action sets
 * @selector .lwc-icon_unset
 * @restrict .lwc-icon
 * @modifier
 * @group unset
 */
.lwc-icon_unset {
  background-color: unset;
  color: unset;
}

/**
 * Action Icons
 */
.lwc-icon-action {

  &.lwc-icon_x-large {
    padding: $_c-icon-action-padding-x-large;
  }

  &.lwc-icon_large {
    padding: $_c-icon-action-padding-large;
  }

  &.lwc-icon_medium {
    padding: $_c-icon-action-padding-medium;
  }

  &.lwc-icon_small {
    padding: $_c-icon-action-padding-small;
  }

  &.lwc-icon_x-small {
    padding: $_c-icon-action-padding-x-small;
  }

  &.lwc-icon_xx-small {
    padding: $_c-icon-action-padding-xx-small;
  }
}

/**
 * Type: Standard
 */
.lwc-icon-standard {

  &.lwc-icon_x-small {
    border-radius: $_c-icon-border-radius-small;
  }

  &.lwc-icon_xx-small {
    border-radius: $_c-icon-border-radius-small;
  }
}

// ----------
// Sizing
// ----------

/**
 * @summary
 * @selector .lwc-icon_x-large
 * @restrict .lwc-icon
 * @modifier
 * @group sizing
 */
.lwc-icon_x-large {
  --lwc-c-icon-size: $_c-icon-x-large;
}

/**
 * @summary
 * @selector .lwc-icon_large
 * @restrict .lwc-icon
 * @modifier
 * @group sizing
 */
.lwc-icon_large {
  --lwc-c-icon-size: $_c-icon-large;
}

/**
 * @summary
 * @selector .lwc-icon_medium
 * @restrict .lwc-icon
 * @modifier
 * @group sizing
 */
.lwc-icon_medium {
  --lwc-c-icon-size: $_c-icon-medium;
}

/**
 * @summary
 * @selector .lwc-icon_small
 * @restrict .lwc-icon
 * @modifier
 * @group sizing
 */
.lwc-icon_small {
  --lwc-c-icon-size: $_c-icon-small;
}

/**
 * @summary
 * @selector .lwc-icon_x-small
 * @restrict .lwc-icon
 * @modifier
 * @group sizing
 */
.lwc-icon_x-small {
  --lwc-c-icon-size: $_c-icon-x-small;
}

/**
 * @summary
 * @selector .lwc-icon_xx-small
 * @restrict .lwc-icon
 * @modifier
 * @group sizing
 */
.lwc-icon_xx-small {
  --lwc-c-icon-size: $_c-icon-xx-small;
}

// ----------
// Color
// ----------

/**
 * @summary
 * @selector .lwc-icon_success
 * @restrict .lwc-icon
 * @modifier
 * @group color
 */
.lwc-icon_success {
  color: var(--lwc-c-icon-color-success, $color-text-success);
}

/**
 * @summary
 * @selector .lwc-icon_warning
 * @restrict .lwc-icon
 * @modifier
 * @group color
 */
.lwc-icon_warning {
  color: var(--lwc-c-icon-color-warning, $color-text-warning);
}

/**
 * @summary
 * @selector .lwc-icon_error
 * @restrict .lwc-icon
 * @modifier
 * @group color
 */
.lwc-icon_error {
  color: var(--lwc-c-icon-color-error, $color-text-error);
}

/**
 * @summary
 * @selector .lwc-icon_muted
 * @restrict .lwc-icon
 * @modifier
 * @group color
 */
.lwc-icon_muted {
  color: var(--lwc-c-icon-color-muted, $color-gray-7);
}

// ----------
// Icon Boundary
// ----------

/**
 * @name base
 * @summary
 * @selector .lwc-icon-boundary
 * @restrict span
 * @variant
 */
.lwc-icon-boundary {
  @include icon-base;
  margin-top: var(--lwc-c-icon-spacing-vertical-start, 0);
  margin-right: var(--lwc-c-icon-spacing-horizontal-end, 0);
  margin-bottom: var(--lwc-c-icon-spacing-vertical-end, 0);
  margin-left: var(--lwc-c-icon-spacing-horizontal-start, 0);
}

/**
 * @summary
 * @selector .lwc-icon-boundary_x-large
 * @restrict .lwc-icon-boundary
 * @modifier
 * @group sizing
 */
.lwc-icon-boundary_x-large {
  @include square($_c-icon-boundary-x-large);
}

/**
 * @summary
 * @selector .lwc-icon-boundary_large
 * @restrict .lwc-icon-boundary
 * @modifier
 * @group sizing
 */
.lwc-icon-boundary_large {
  @include square($_c-icon-boundary-large);
}

/**
 * @summary
 * @selector .lwc-icon-boundary_medium
 * @restrict .lwc-icon-boundary
 * @modifier
 * @group sizing
 */
.lwc-icon-boundary_medium {
  @include square($_c-icon-boundary-medium);
}

/**
 * @summary
 * @selector .lwc-icon-boundary_small
 * @restrict .lwc-icon-boundary
 * @modifier
 * @group sizing
 */
.lwc-icon-boundary_small {
  @include square($_c-icon-boundary-small);
}

/**
 * @summary
 * @selector .lwc-icon-boundary_x-small
 * @restrict .lwc-icon-boundary
 * @modifier
 * @group sizing
 */
.lwc-icon-boundary_x-small {
  @include square($_c-icon-boundary-x-small);
}

/**
 * @name base
 * @summary
 * @selector .lwc-svg
 * @restrict svg
 * @variant
 */
.lwc-svg {
  @include icon-svg;
  fill: var(--lwc-c-icon-primitive-color, currentColor);
}

/**
 * @summary
 * @selector .lwc-icon-orientation_90deg
 * @restrict .lwc-icon
 * @modifier
 * @group orientation
 */
.lwc-icon-orientation_90deg {
  transform: rotate(90deg);
}

/**
 * @summary
 * @selector .lwc-icon-orientation_neg90deg
 * @restrict .lwc-icon
 * @modifier
 * @group orientation
 */
.lwc-icon-orientation_neg90deg {
  transform: rotate(-90deg);
}
